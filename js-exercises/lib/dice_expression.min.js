"use strict";function DiceExpression(r){function n(r){function n(r){return c?-r:r}function t(r){var n=e(r),t=parseInt(n[0]);isNaN(t)&&(t=1);var i=parseInt(n[1]);return isNaN(i)&&(i=100),[t,i]}function e(r){return o.includes(r)?o.split(r):[]}function i(r){var n=/(d|D)/g.exec(r);return n?n[1]:null}function u(n){if(n){var e=t(n);a=Math.abs(e[0]),l=e[1]}else s=!0,a=1,l=parseInt(r)}var o=r,s=!1,c=r.startsWith("-"),a=1,l=1;u(i(o)),this.roll=function(){if(s)return l;for(var r=0,t=0;t<a;t++)r+=random.integer(1,l);return n(r)},this.min=function(){return s?l:Math.min(n(a),n(a*l))},this.max=function(){return s?l:Math.max(n(a*l),n(a))},this.rollDetailed=function(){if(s)return{roll:l,dice:[l]};for(var r=0,t=[],e=0;e<a;e++){var i=random.integer(1,l);r+=i,t.push(i)}return{roll:n(r),dice:t}},this.getDice=function(){return o}}function t(){if(!o.test(i))throw new Error("Incorrect Dice Expression");for(var r;r=s.exec(i);)u.push(new n(r[1]))}function e(r){return u.reduce(function(n,t){return n+=parseInt(r(t))},0)}var i=r,u=[],o=/^((?:\+|-)?(?:[1-9][0-9]*)?(?:(?:d|D)?(?:[1-9][0-9]*)+|d%|D%))+$/g,s=/((?:\+|-)?(?:[1-9][0-9]*)?(?:(?:d|D)?(?:[1-9][0-9]*)+|d%|D%))/g;t(),this.min=function(){return e(function(r){return r.min()})},this.max=function(){return e(function(r){return r.max()})},this.roll=function(){return e(function(r){return r.roll()})},this.rollDetailed=function(){var r=new Array(u.length),n=0,t=0;return u.forEach(function(e){var i=e.rollDetailed();r[t]=i.dice,n+=parseInt(i.roll),++t}),{roll:n,dice:r}},this.rollDetailedAsString=function(){return JSON.stringify(this.rollDetailed())},this.expression=function(){return i}}var random=require("random-js")();module.exports=DiceExpression;